{"version":3,"sources":["assets/img/svg/logo.svg","modules/generic/Logo.tsx","modules/blocks/Header.tsx","utils/misc.ts","modules/blocks/Footer.tsx","pages/AboutPage.tsx","modules/generic/Icon.tsx","modules/gallery/c/GalleryItem.tsx","modules/gallery/GalleryList.tsx","modules/house/c/SceneConstructor.ts","modules/house/c/LightConstructor.ts","modules/house/c/InteractiveElements.ts","modules/house/c/SkyConstructor.ts","modules/house/c/GrassConstructor.ts","modules/house/c/HouseView.ts","modules/house/HouseFrame.tsx","pages/IndexPage.tsx","pages/MaterialsPage.tsx","modules/gallery/c/GalleryPopup.tsx","modules/gallery/GalleryPictures.tsx","pages/GalleryPage.tsx","pages/AccessoriesPage.tsx","pages/TermsOfActionPage.tsx","pages/ContactsPage.tsx","pages/SitemapPage.tsx","utils/DynamicBreadcrumb.tsx","conf/routes.ts","stores/Pages.ts","modules/generic/Breadcrumbs.tsx","modules/generic/PageContainer.tsx","utils/API.ts","stores/Gallery.ts","stores/Materials.ts","App.tsx","stores/Company.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","to","className","src","logo","alt","Header","indexPage","App","pages","main","menuList","header","toggleSideFn","this","props","onClick","Array","map","v","k","path","length","page","name","id","href","Component","chunk","arr","size","start","end","out","i","push","range","Math","ceil","x","slice","makeRequest","url","method","headersObj","data","headers","Headers","csrftoken","getCookie","isSameOrigin","append","body","fd","FormData","Request","credentials","redirect","cache","noop","document","cookie","cookies","split","trim","substring","decodeURIComponent","sr_origin","location","host","origin","protocol","test","Footer","footer","companyInfo","company","col","key","email","address","phone","AboutPage","text","aboutText","Icon","React","memo","GalleryItem","item","CODE","NAME","PREVIEW_PICTURE","observer","GalleryList","items","from","makeObservable","observable","gallery","getItems","then","runInAction","SceneConstructor","frame","scene","THREE","loader","GLTFLoader","camera","renderer","WebGLRenderer","antialias","powerPreference","onDemand","init","position","set","rotation","setPixelRatio","shadowMap","enabled","type","outputEncoding","setSize","clientWidth","clientHeight","appendChild","domElement","window","addEventListener","onWindowResize","onWindowScroll","render","processMaterial","obj","castShadow","receiveShadow","material","bumpMap","bumpScale","anisotropy","loadHouse","load","gltf","house","add","children","forEach","isMesh","indexOf","isGroup","child","visible","classList","remove","xhr","console","log","loaded","total","error","getCameraMove","viewSize","getSize","e","pos","clientX","xPath","y","clientY","aspect","updateProjectionMatrix","scrollY","destroy","removeEventListener","LightConstructor","createDirectionalLight","params","color","opacity","resolution","debug","light","multiplyScalar","shadow","mapSize","width","height","d","left","right","top","bottom","far","bias","helper","InteractiveMesh","hover","onHover","onLeave","InteractiveElements","objects","raycaster","mouse","intersected","lastIntersected","uuid","object","value","filter","createClickableMesh","coords","dimensions","fnClick","fnHover","fnLeave","geometry","transparent","mesh","z","di","onMouseClick","event","preventDefault","onMouseMove","offsetTop","setFromCamera","intersects","intersectObjects","setObject","SkyConstructor","options","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","exposure","sky","initSky","effectController","Sky","scale","setScalar","sun","uniforms","phi","degToRad","theta","setFromSphericalCoords","copy","toneMappingExposure","GrassConstructor","joints","w_","h_","depth","instances","offset","excludeBox","x1","z1","x2","z2","draw","multiplyQuaternions","q1","q2","w","vertexSource","fragmentSource","base_geometry","translate","base_material","side","base_blade","instanced_geometry","index","attributes","uv","offsets","orientations","stretches","halfRootAngleSin","halfRootAngleCos","quaternion_0","quaternion_1","min","random","angle","PI","sin","cos","RotationAxis","normalize","offsetAttribute","Float32Array","stretchAttribute","halfRootAngleSinAttribute","halfRootAngleCosAttribute","orientationAttribute","setAttribute","crossOrigin","texture","alphaMap","time","vertexShader","fragmentShader","HouseView","cameraMoveFn","lightHelper","interactiveHelper","grass","skyController","COORDS","DIMENSIONS","link","el","HouseFrame","view","createRef","current","ref","IndexPage","withRouter","MaterialsPage","tabs","activeTab","setTab","action","events","emit","materials","match","prevProps","tab","dangerouslySetInnerHTML","__html","DETAIL_TEXT","GalleryPopup","img","next","images","prev","closeFn","GalleryPictures","pictures","allPictures","showPictures","splice","showGallery","showMore","setGallery","GalleryPage","undefined","getContent","PREVIEW_TEXT","PICTURES","AccessoriesPage","str","TermsOfActionPage","ContactsPage","fullAddress","query","apikey","lang","style","defaultState","center","zoom","coordinates","geodesic","strokeWidth","strokeColor","hasBalloon","openBalloonOnClick","properties","balloonContent","modules","defaultPoint","direction","SitemapPage","DynamicBreadcrumb","breadcrumb","fillBreadcrumb","find","pathList","idx","findIndex","param","routesConf","exact","component","parentId","PageComponents","Pages","list","r","withBreadcrumbs","routesMap","breadcrumbs","PageContainer","pageName","setPageName","on","off","cls","classNames","API","args","batch","Promise","resolve","callMethod","extra","profile","download","request","_resolve","_reject","promise","reject","doCallAPI","fetch","response","ok","json","Error","status","statusText","continueCalls","result","callInProgress","queue","nextCall","shift","getURL","JSON","stringify","Gallery","contents","a","Materials","history","createBrowserHistory","EventEmitter","sideOpened","toggleSide","route","PageComponent","classnames","routes","renderPage","getApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6be3e4fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a49a3e3.svg\";","import React from \"react\";\nimport logo from \"assets/img/svg/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = { to?: string };\n\nconst Logo = ({ to }: Props) => {\n    return (\n        <div className=\"logo\">\n            {to ? (\n                <Link to={to}>\n                    <img src={logo} alt=\"\" />\n                </Link>\n            ) : (\n                <img src={logo} alt=\"\" />\n            )}\n        </div>\n    );\n};\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport \"assets/scss/blocks/Header.scss\";\nimport Logo from \"modules/generic/Logo\";\nimport App from \"App\";\nimport { NavLink } from \"react-router-dom\";\n\ntype Props = {\n    toggleSideFn: Function;\n};\n\nclass Header extends Component<Props> {\n    indexPage = App.pages.main;\n    menuList = App.pages.header;\n\n    render() {\n        const { toggleSideFn } = this.props;\n\n        return (\n            <header>\n                <div className=\"container\">\n                    <div className=\"menu-button\" onClick={() => toggleSideFn()}>\n                        {[...Array(3)].map((v, k) => (\n                            <div key={k} className=\"menu-button__bar\" />\n                        ))}\n                    </div>\n                    <Logo to={this.indexPage.path} />\n                    {!!this.menuList.length && (\n                        <nav className=\"header-menu\">\n                            <ul>\n                                {this.menuList.map(page => (\n                                    <li key={\"header-link__\" + page.id}>\n                                        <NavLink to={page.path}>\n                                            {page.name}\n                                        </NavLink>\n                                    </li>\n                                ))}\n                            </ul>\n                        </nav>\n                    )}\n\n                    <a\n                        className=\"round-button icn_phone\"\n                        href=\"tel:+79990001122\"\n                    >\n                        Позвонить в компанию \"Идея мебели\"\n                    </a>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","export function range(start: number, end: number | null = null): number[] {\n    if (end === null) {\n        end = start;\n        start = 0;\n    }\n\n    const out = [];\n    for (let i = start; i < end; i++) {\n        out.push(i);\n    }\n    return out;\n}\n\nexport const chunk = (arr: any[], size: number): any[] =>\n    range(Math.ceil(arr.length / size)).map((x, i) =>\n        arr.slice(i * size, i * size + size)\n    );\n\nexport function makeRequest(\n    url: string,\n    method: string = \"GET\",\n    headersObj: Object | null = null,\n    data: Object | null = null\n) {\n    const headers = new Headers();\n    const csrftoken = getCookie(\"csrftoken\");\n    if (csrftoken && isSameOrigin(url))\n        headers.append(\"X-CSRFToken\", csrftoken);\n    if (headersObj) {\n        for (let name in headersObj) {\n            // @ts-ignore\n            headers.append(name, headersObj[name]);\n        }\n    }\n\n    let body = null;\n    if (data) {\n        const fd = new FormData();\n        for (let name in data) {\n            // @ts-ignore\n            fd.append(name, data[name]);\n        }\n        body = fd;\n    }\n\n    return new Request(url, {\n        method,\n        credentials: \"same-origin\",\n        redirect: \"follow\",\n        cache: \"no-cache\",\n        headers,\n        body\n    });\n}\n\nexport function noop(...args: any[]) {}\n\nexport function getCookie(name: string) {\n    if (document.cookie && document.cookie !== \"\") {\n        const cookies = document.cookie.split(\";\");\n        for (let i = 0; i < cookies.length; i++) {\n            let cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === name + \"=\") {\n                return decodeURIComponent(cookie.substring(name.length + 1));\n            }\n        }\n    }\n    return null;\n}\n\nexport function isSameOrigin(url: string) {\n    const host = document.location.host;\n    const protocol = document.location.protocol;\n    const sr_origin = \"//\" + host;\n    const origin = protocol + sr_origin;\n\n    return (\n        url === origin ||\n        url.slice(0, origin.length + 1) === origin + \"/\" ||\n        url === sr_origin ||\n        url.slice(0, sr_origin.length + 1) === sr_origin + \"/\" ||\n        !/^(\\/\\/|http:|https:).*/.test(url)\n    );\n}\n","import React, { Component } from \"react\";\nimport \"assets/scss/blocks/Footer.scss\";\nimport Logo from \"modules/generic/Logo\";\nimport App from \"App\";\nimport { chunk } from \"utils/misc\";\nimport { Link } from \"react-router-dom\";\nimport { Page } from \"stores/Pages\";\n\nexport default class Footer extends Component<any> {\n    indexPage = App.pages.main;\n    menuList = chunk(App.pages.footer, 2);\n    companyInfo = App.company;\n\n    render() {\n        return (\n            <footer>\n                <div className=\"container\">\n                    <Logo to={this.indexPage.path} />\n                    {this.menuList.length && (\n                        <div className=\"footer-menu\">\n                            {this.menuList.map((col: Page[], key) => (\n                                <div\n                                    key={\"footer-col__\" + key}\n                                    className=\"footer-menu__col\"\n                                >\n                                    {col.map(page => (\n                                        <Link\n                                            key={\"header-link__\" + page.id}\n                                            to={page.path}\n                                        >\n                                            {page.name}\n                                        </Link>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n\n                    <div className=\"footer-contacts\">\n                        <div className=\"footer-contacts__contact\">\n                            <span className=\"icn_letter\" />\n                            {this.companyInfo.email}\n                        </div>\n                        <div className=\"footer-contacts__contact\">\n                            <span className=\"icn_point\" />\n                            {this.companyInfo.address}\n                        </div>\n                        <div className=\"footer-contacts__contact\">\n                            <span className=\"icn_phone\" />\n                            {this.companyInfo.phone}\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n","import { Component } from \"react\";\nimport App from \"App\";\n\nclass AboutPage extends Component<any> {\n    text = App.company.aboutText;\n\n    render() {\n        return this.text;\n    }\n}\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\n\nclass Icon extends Component<{ src: string; alt?: string }> {\n    render() {\n        const { src, alt } = this.props;\n\n        return <img src={src} alt={alt} />;\n    }\n}\n\nexport default React.memo(Icon);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GalleryItemType } from \"stores/Gallery\";\nimport { observer } from \"mobx-react\";\nimport Icon from \"modules/generic/Icon\";\n\nclass GalleryItem extends Component<{\n    item?: GalleryItemType;\n}> {\n    render() {\n        if (!this.props.item)\n            return (\n                <div className=\"gallery-item skeleton\">\n                    <div className=\"gallery-item__img\" />\n                    <div className=\"gallery-item__label\" />\n                </div>\n            );\n\n        const { CODE, NAME, PREVIEW_PICTURE } = this.props.item;\n        return (\n            <div className=\"gallery-item\">\n                <Link to={\"/gallery/\" + CODE}>\n                    <div className=\"gallery-item__img\">\n                        <Icon src={PREVIEW_PICTURE} />\n                    </div>\n                    <div className=\"gallery-item__label\">{NAME}</div>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default observer(GalleryItem);\n","import React, { Component } from \"react\";\nimport \"assets/scss/blocks/GalleryList.scss\";\nimport { observer } from \"mobx-react\";\nimport GalleryItem from \"modules/gallery/c/GalleryItem\";\nimport App from \"App\";\nimport { GalleryItemType } from \"stores/Gallery\";\nimport { makeObservable, observable, runInAction } from \"mobx\";\n\nclass GalleryList extends Component<any> {\n    items: GalleryItemType[] | Array<undefined> = Array.from(Array(7));\n\n    constructor(props: any) {\n        super(props);\n\n        makeObservable(this, {\n            items: observable\n        });\n    }\n\n    componentDidMount() {\n        App.gallery.getItems().then(data => {\n            runInAction(() => {\n                this.items = data;\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"gallery-list\">\n                {this.items.map((item, key) => (\n                    <GalleryItem\n                        item={item}\n                        key={\"gallery-item__\" + (item?.CODE || key)}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default observer(GalleryList);\n","import * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport {\n    BufferGeometry,\n    Group,\n    Mesh,\n    MeshStandardMaterial,\n    WebGLRenderer\n} from \"three\";\n\nexport default class SceneConstructor {\n    frame;\n    scene = new THREE.Scene();\n    loader = new GLTFLoader();\n    camera;\n    renderer: WebGLRenderer = new WebGLRenderer({\n        antialias: true,\n        powerPreference: \"high-performance\"\n        // precision: \"lowp\",\n        // depth: false,\n    });\n    onDemand = true;\n\n    init = () => {\n        this.camera.position.set(0, 10, 20);\n        this.camera.rotation.x = -0.1;\n\n        this.renderer.setPixelRatio(0.8);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.VSMShadowMap;\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\n        this.renderer.setSize(this.frame.clientWidth, this.frame.clientHeight);\n        this.frame.appendChild(this.renderer.domElement);\n\n        window.addEventListener(\"resize\", this.onWindowResize);\n        window.addEventListener(\"scroll\", this.onWindowScroll);\n    };\n\n    render = () => {\n        this.renderer.render(this.scene, this.camera);\n    };\n\n    processMaterial = (obj: Mesh<BufferGeometry, MeshStandardMaterial>) => {\n        obj.castShadow = true;\n        obj.receiveShadow = true;\n        if (obj.name === \"wooden_inside-outside\") {\n            obj.material.bumpMap = obj.material.map;\n            obj.material.bumpScale = 0.1;\n        }\n        if (obj.material.map) obj.material.map.anisotropy = 4;\n    };\n\n    loadHouse = () => {\n        // Load a glTF resource\n        this.loader.load(\n            // resource URL\n            \"./model/house.gltf\",\n            // called when the resource is loaded\n            gltf => {\n                const house = gltf.scene;\n                house.castShadow = true;\n                house.receiveShadow = true;\n                this.scene.add(house);\n\n                house.children.forEach(obj => {\n                    if (\n                        (obj as Mesh<BufferGeometry, MeshStandardMaterial>)\n                            .isMesh &&\n                        obj.name.indexOf(\"text_\") === -1\n                    ) {\n                        this.processMaterial(\n                            obj as Mesh<BufferGeometry, MeshStandardMaterial>\n                        );\n                    }\n                    if ((obj as Group).isGroup) {\n                        obj.children.forEach((child: any) => {\n                            this.processMaterial(child);\n                        });\n                    }\n                    if (obj.name === \"windows_glasses\") {\n                        obj.visible = false;\n                    }\n                });\n                this.frame.classList.remove(\"loading\");\n                if (this.onDemand) this.render();\n            },\n            // called while loading is progressing\n            xhr => {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n            },\n            // called when loading has errors\n            error => {\n                console.log(\"An error happened\", error);\n            }\n        );\n    };\n\n    constructor(frame: HTMLDivElement) {\n        this.frame = frame;\n        this.camera = new THREE.PerspectiveCamera(\n            75,\n            this.frame.clientWidth / this.frame.clientHeight,\n            0.1,\n            1000\n        );\n\n        this.init();\n        this.loadHouse();\n    }\n\n    getCameraMove = () => {\n        const viewSize = this.renderer.getSize(new THREE.Vector2());\n        let xPath = 5;\n        let yPath = 3;\n        return (e: MouseEvent) => {\n            let mousePosPerc = {\n                x: e.clientX / viewSize.x,\n                y: 1 - e.clientY / viewSize.y\n            };\n\n            let pos = {\n                x: xPath / -2 + xPath * mousePosPerc.x,\n                y: yPath + yPath * mousePosPerc.y + 4\n            };\n\n            this.camera.position.x = pos.x > 3 ? 3 : pos.x < -3 ? -3 : pos.x;\n            this.camera.position.y = pos.y > 10 ? 10 : pos.y < 5 ? 5 : pos.y;\n\n            if (this.onDemand) this.render();\n        };\n    };\n\n    onWindowResize = () => {\n        this.camera.aspect = this.frame.clientWidth / this.frame.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.frame.clientWidth, this.frame.clientHeight);\n\n        if (this.onDemand) this.render();\n    };\n\n    onWindowScroll = () => {\n        this.camera.rotation.x = -window.scrollY / 3000 - 0.1;\n        if (this.onDemand) this.render();\n    };\n\n    destroy = () => {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n        window.removeEventListener(\"scroll\", this.onWindowScroll);\n    };\n}\n","import * as THREE from \"three\";\n\nexport default class LightConstructor {\n    createDirectionalLight = (\n        scene: THREE.Scene,\n        params = {\n            color: 0xdfebff,\n            opacity: 1,\n            position: [25, 100, 50],\n            resolution: 64\n        },\n        debug = false\n    ) => {\n        const light = new THREE.DirectionalLight(params.color, params.opacity);\n        light.position.set(\n            params.position[0],\n            params.position[1],\n            params.position[2]\n        );\n        light.position.multiplyScalar(1.3);\n\n        light.castShadow = true;\n\n        light.shadow.mapSize.width = params.resolution ? params.resolution : 64;\n        light.shadow.mapSize.height = params.resolution\n            ? params.resolution\n            : 64;\n\n        const d = 100; //300\n\n        light.shadow.camera.left = -d;\n        light.shadow.camera.right = d;\n        light.shadow.camera.top = d;\n        light.shadow.camera.bottom = -d;\n\n        light.shadow.camera.far = 300;\n\n        light.shadow.bias = -0.0005;\n\n        scene.add(light);\n\n        if (debug) {\n            const helper = new THREE.DirectionalLightHelper(light, 5);\n            scene.add(helper);\n        }\n\n        return light;\n    };\n}\n","import * as THREE from \"three\";\nimport { BufferGeometry } from \"three\";\n\nclass InteractiveMesh extends THREE.Mesh<BufferGeometry> {\n    hover: boolean = false;\n    onClick: Function = () => {};\n    onHover: Function = () => {};\n    onLeave: Function = () => {};\n}\n\ntype intersectableMesh = {\n    uuid: string | null;\n    object: InteractiveMesh | null;\n    objects: Array<InteractiveMesh>;\n    setObject: any;\n};\n\nexport default class InteractiveElements {\n    objects: Array<InteractiveMesh> = [];\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n    frame;\n    camera;\n    intersected: THREE.Object3D<THREE.Event> | null = null;\n    lastIntersected: intersectableMesh = {\n        uuid: null,\n        object: null,\n        objects: this.objects,\n        set setObject(value: InteractiveMesh) {\n            if (value && value.uuid) {\n                this.uuid = value.uuid;\n                this.object = value;\n            } else {\n                if (this.object && this.object.onLeave) {\n                    this.object.hover = false;\n                    this.object.onLeave();\n                }\n                this.uuid = null;\n                this.object = null;\n            }\n            if (this.object && this.object.onHover) {\n                this.objects\n                    .filter(obj => obj.hover)\n                    .forEach(obj => {\n                        if (obj.uuid !== this.object?.uuid) {\n                            obj.hover = false;\n                            obj.onLeave();\n                        }\n                    });\n                this.object.hover = true;\n                this.object.onHover();\n            }\n        }\n    };\n\n    constructor(frame: HTMLDivElement, camera: THREE.Camera) {\n        this.frame = frame;\n        this.camera = camera;\n    }\n\n    createClickableMesh = (\n        coords = [0, 0, 0], //coords\n        dimensions = [0, 0, 0], //dimensions\n        fnClick: (\n            mesh?: InteractiveMesh,\n            light?: THREE.PointLight\n        ) => void = () => {},\n        fnHover: (\n            mesh?: InteractiveMesh,\n            light?: THREE.PointLight\n        ) => void = () => {},\n        fnLeave: (\n            mesh?: InteractiveMesh,\n            light?: THREE.PointLight\n        ) => void = () => {}\n    ) => {\n        const geometry = new THREE.BoxGeometry(\n            dimensions[0],\n            dimensions[1],\n            dimensions[2]\n        );\n        const material = new THREE.MeshBasicMaterial({\n            color: 0xffffff,\n            // opacity: 0.5,\n            opacity: 0,\n            transparent: true\n        });\n        const mesh = new InteractiveMesh(geometry, material);\n        mesh.position.x = coords[0];\n        mesh.position.y = coords[1];\n        mesh.position.z = coords[2];\n\n        const light = new THREE.PointLight(0xffffff, 1, 100);\n        light.position.set(\n            coords[0],\n            coords[1] + dimensions[1] / 2 - 1,\n            coords[2] - 4\n        );\n        light.castShadow = true;\n        light.shadow.mapSize.width = 64;\n        light.shadow.mapSize.height = 64;\n        const di = 30; //300\n        //@ts-ignore\n        light.shadow.camera.left = -di;\n        //@ts-ignore\n        light.shadow.camera.right = di;\n        //@ts-ignore\n        light.shadow.camera.top = di;\n        //@ts-ignore\n        light.shadow.camera.bottom = -di;\n        light.shadow.camera.far = 30;\n        light.shadow.bias = -0.005;\n        light.visible = false;\n\n        mesh.onClick = () => fnClick(mesh, light);\n        mesh.onHover = () => fnHover(mesh, light);\n        mesh.onLeave = () => fnLeave(mesh, light);\n\n        this.objects.push(mesh);\n\n        return { mesh, light };\n    };\n\n    onMouseClick = (event: MouseEvent) => {\n        event.preventDefault();\n        this.onMouseMove(event);\n        if (this.lastIntersected.object) {\n            this.lastIntersected.object.onClick();\n        }\n    };\n\n    onMouseMove = (event: MouseEvent) => {\n        this.mouse.x = (event.clientX / this.frame.clientWidth) * 2 - 1;\n        this.mouse.y =\n            -(\n                (event.clientY + window.scrollY) /\n                (this.frame.clientHeight + this.frame.offsetTop + 60)\n            ) *\n                2 +\n            1;\n\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n\n        const intersects = this.raycaster.intersectObjects(this.objects);\n\n        if (intersects.length > 0) {\n            if (this.intersected !== intersects[0].object) {\n                this.intersected = intersects[0].object;\n            }\n        } else {\n            this.intersected = null;\n        }\n\n        if (\n            this.intersected &&\n            this.lastIntersected.uuid !== this.intersected.uuid\n        ) {\n            this.lastIntersected.setObject = this.intersected;\n        }\n        if (this.intersected === null && this.lastIntersected.uuid) {\n            this.lastIntersected.setObject = null;\n        }\n    };\n}\n","import { Sky } from \"three/examples/jsm/objects/Sky.js\";\nimport * as THREE from \"three\";\n\ntype skyOptions = {\n    turbidity: number;\n    rayleigh: number;\n    mieCoefficient: number;\n    mieDirectionalG: number;\n    elevation: number;\n    azimuth: number;\n    exposure: number;\n};\n\nexport default class SkyConstructor {\n    renderer: THREE.WebGLRenderer;\n    options: skyOptions = {\n        turbidity: 10,\n        rayleigh: 3,\n        mieCoefficient: 0.005,\n        mieDirectionalG: 0.7,\n        elevation: 2,\n        azimuth: 0,\n        exposure: 0.5\n    };\n    sky;\n\n    constructor(renderer: THREE.WebGLRenderer, options: skyOptions) {\n        this.renderer = renderer;\n        if (options) this.options = options;\n        this.options.exposure = this.renderer\n            ? this.renderer.toneMappingExposure\n            : 0.5;\n\n        this.sky = this.initSky();\n    }\n\n    initSky = () => {\n        const effectController = this.options;\n\n        const sky = new Sky();\n        sky.scale.setScalar(300);\n\n        const sun = new THREE.Vector3();\n\n        const uniforms = sky.material.uniforms;\n        uniforms[\"turbidity\"].value = effectController.turbidity;\n        uniforms[\"rayleigh\"].value = effectController.rayleigh;\n        uniforms[\"mieCoefficient\"].value = effectController.mieCoefficient;\n        uniforms[\"mieDirectionalG\"].value = effectController.mieDirectionalG;\n\n        const phi = THREE.MathUtils.degToRad(90 - effectController.elevation);\n        const theta = THREE.MathUtils.degToRad(effectController.azimuth);\n\n        sun.setFromSphericalCoords(1, phi, theta);\n\n        uniforms[\"sunPosition\"].value.copy(sun);\n\n        this.renderer.toneMappingExposure = effectController.exposure;\n\n        return sky;\n    };\n}\n","import * as THREE from \"three\";\nimport SceneConstructor from \"modules/house/c/SceneConstructor\";\n\nexport default class GrassConstructor {\n    //Variables for blade mesh\n    joints = 1;\n    w_ = 0.05;\n    h_ = 0.4;\n\n    //Patch side length\n    width = 70;\n    depth = 35;\n\n    //Number of blades\n    instances = 30000;\n\n    house: SceneConstructor;\n\n    offset = {\n        x: -3,\n        y: 0,\n        z: -2\n    };\n\n    excludeBox = {\n        x1: -20,\n        z1: -20,\n        x2: 20,\n        z2: 5.5\n    };\n\n    draw: (time: number) => void = () => {};\n\n    constructor(house: SceneConstructor) {\n        this.house = house;\n\n        // if (isMobile) {\n        //     this.instances = 10000;\n        // }\n    }\n\n    multiplyQuaternions = (q1: THREE.Vector4, q2: THREE.Vector4) => {\n        const x = q1.x * q2.w + q1.y * q2.z - q1.z * q2.y + q1.w * q2.x;\n        const y = -q1.x * q2.z + q1.y * q2.w + q1.z * q2.x + q1.w * q2.y;\n        const z = q1.x * q2.y - q1.y * q2.x + q1.z * q2.w + q1.w * q2.z;\n        const w = -q1.x * q2.x - q1.y * q2.y - q1.z * q2.z + q1.w * q2.w;\n        return new THREE.Vector4(x, y, z, w);\n    };\n\n    //************** Shader sources **************\n    vertexSource =\n        `\n\t\t\tprecision mediump float;\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec3 offset;\n\t\t\tattribute vec2 uv;\n\t\t\tattribute vec4 orientation;\n\t\t\tattribute float halfRootAngleSin;\n\t\t\tattribute float halfRootAngleCos;\n\t\t\tattribute float stretch;\n\t\t\tuniform float time;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying float frc;\n\n\t\t\t//WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n\n\t\t\t//Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n\n\t\t\tvec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n\t\t\t//END NOISE\n\n\t\t\t//https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n\t\t\tvec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n\t\t\treturn 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n\t\t\t}\n\n\t\t\t//https://en.wikipedia.org/wiki/Slerp\n\t\t\tvec4 slerp(vec4 v0, vec4 v1, float t) {\n\t\t\t// Only unit quaternions are valid rotations.\n\t\t\t// Normalize to avoid undefined behavior.\n\t\t\tnormalize(v0);\n\t\t\tnormalize(v1);\n\n\t\t\t// Compute the cosine of the angle between the two vectors.\n\t\t\tfloat dot_ = dot(v0, v1);\n\n\t\t\t// If the dot product is negative, slerp won't take\n\t\t\t// the shorter path. Note that v1 and -v1 are equivalent when\n\t\t\t// the negation is applied to all four components. Fix by \n\t\t\t// reversing one quaternion.\n\t\t\tif (dot_ < 0.0) {\n\t\t\t\tv1 = -v1;\n\t\t\t\tdot_ = -dot_;\n\t\t\t}  \n\n\t\t\tconst float DOT_THRESHOLD = 0.9995;\n\t\t\tif (dot_ > DOT_THRESHOLD) {\n\t\t\t\t// If the inputs are too close for comfort, linearly interpolate\n\t\t\t\t// and normalize the result.\n\n\t\t\t\tvec4 result = t*(v1 - v0) + v0;\n\t\t\t\tnormalize(result);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t// Since dot is in range [0, DOT_THRESHOLD], acos is safe\n\t\t\tfloat theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n\t\t\tfloat theta = theta_0*t;          // theta = angle between v0 and result\n\t\t\tfloat sin_theta = sin(theta);     // compute this value only once\n\t\t\tfloat sin_theta_0 = sin(theta_0); // compute this value only once\n\n\t\t\tfloat s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n\t\t\tfloat s1 = sin_theta / sin_theta_0;\n\n\t\t\treturn (s0 * v0) + (s1 * v1);\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t//Relative position of vertex along the mesh Y direction\n\t\t\tfrc = position.y/float(` +\n        this.h_ +\n        `);\n\n\t\t\t//Get wind data from simplex noise \n\t\t\tfloat noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0)))); \n\n\t\t\t//Define the direction of an unbent blade of grass rotated around the Y axis\n\t\t\tvec4 direction = vec4(0.0, halfRootAngleSin, 0.0, halfRootAngleCos);\n\n\t\t\t//Interpolate between the unbent direction and the direction of growth calculated on the CPU. \n\t\t\t//Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n\t\t\tdirection = slerp(direction, orientation, frc);\n\t\t\tvec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n\t\t\tvPosition = rotateVectorByQuaternion(vPosition, direction);\n\n\t\t\t//Apply wind\n\t\t\tfloat halfAngle = noise * 0.15;\n\t\t\tvPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n\n\t\t\t//UV for texture\n\t\t\tvUv = uv;\n\n\t\t\t//Calculate final position of the vertex from the world offset and the above shenanigans \n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n\t\t\t}`;\n\n    fragmentSource = `\n\t\tprecision mediump float;\n\t\tuniform sampler2D map;\n\t\tuniform sampler2D alphaMap;\n\t\tvarying vec2 vUv;\n\t\tvarying float frc;\n\n\t\tvoid main() {\n\t\t//Get transparency information from alpha map\n\t\tfloat alpha = texture2D(alphaMap, vUv).r;\n\t\t//If transparent, don't draw\n\t\tif(alpha < 0.15){\n\t\t\tdiscard;\n\t\t}\n\t\t//Get colour data from texture\n\t\tvec4 col = vec4(texture2D(map, vUv));\n\t\t//Add more green towards root\n\t\tcol = mix(vec4(0.0, 0.6, 0.0, 1.0), col, frc);\n\t\t//Add a shadow towards root\n\t\tcol = mix(vec4(0.0, 0.1, 0.0, 1.0), col, frc);\n\t\tgl_FragColor = col;\n\t\t}`;\n\n    init = () => {\n        //Use noise.js library to generate a grid of 2D simplex noise values\n        // noise.seed(Math.random());\n\n        // function getYPosition(x, z) {\n        function getYPosition() {\n            // var y = 2 * noise.simplex2(x / 50, z / 50);\n            // y += 4 * noise.simplex2(x / 100, z / 100);\n            // y += 0.2 * noise.simplex2(x / 10, z / 10);\n            return -0.1;\n        }\n\n        // Define base geometry that will be instanced. We use a plane for an individual blade of grass\n        const base_geometry = new THREE.PlaneGeometry(\n            this.w_,\n            this.h_,\n            1,\n            this.joints\n        );\n        base_geometry.translate(0, this.h_ / 2, 0);\n        var base_material = new THREE.MeshPhongMaterial({\n            color: 0xff0000,\n            side: THREE.DoubleSide\n        });\n        const base_blade = new THREE.Mesh(base_geometry, base_material);\n        const instanced_geometry = new THREE.InstancedBufferGeometry();\n\n        //************** Attributes **************\n        instanced_geometry.index = base_geometry.index;\n        instanced_geometry.attributes.position =\n            base_geometry.attributes.position;\n        instanced_geometry.attributes.uv = base_geometry.attributes.uv;\n\n        // Each instance has its own data for position, rotation and scale\n        const offsets = [];\n        const orientations = [];\n        const stretches = [];\n        const halfRootAngleSin = [];\n        const halfRootAngleCos = [];\n\n        //Temp variables\n        let quaternion_0 = new THREE.Vector4();\n        let quaternion_1 = new THREE.Vector4();\n\n        //The min and max angle for the growth direction (in radians)\n        const min = -0.25;\n        const max = 0.25;\n\n        //For each instance of the grass blade\n        for (let i = 0; i < this.instances; i++) {\n            let x, y, z;\n            //Offset of the roots\n            x = Math.random() * this.width - this.width / 2;\n            z = Math.random() * this.depth - this.depth / 2;\n            if (\n                this.excludeBox.x1 <= x &&\n                x <= this.excludeBox.x2 &&\n                this.excludeBox.z1 <= z &&\n                z <= this.excludeBox.z2\n            ) {\n                this.instances++;\n                continue;\n            }\n            // y = getYPosition(x, z);\n            y = getYPosition(); //flat\n            offsets.push(\n                x + this.offset.x,\n                y + this.offset.y,\n                z + this.offset.z\n            );\n\n            //Define random growth directions\n            //Rotate around Y\n            let angle = Math.PI - Math.random() * (2 * Math.PI);\n            halfRootAngleSin.push(Math.sin(0.5 * angle));\n            halfRootAngleCos.push(Math.cos(0.5 * angle));\n\n            let RotationAxis = new THREE.Vector3(0, 1, 0);\n            x = RotationAxis.x * Math.sin(angle / 2.0);\n            y = RotationAxis.y * Math.sin(angle / 2.0);\n            z = RotationAxis.z * Math.sin(angle / 2.0);\n            let w = Math.cos(angle / 2.0);\n            quaternion_0.set(x, y, z, w).normalize();\n\n            //Rotate around X\n            angle = Math.random() * (max - min) + min;\n            RotationAxis = new THREE.Vector3(1, 0, 0);\n            x = RotationAxis.x * Math.sin(angle / 2.0);\n            y = RotationAxis.y * Math.sin(angle / 2.0);\n            z = RotationAxis.z * Math.sin(angle / 2.0);\n            w = Math.cos(angle / 2.0);\n            quaternion_1.set(x, y, z, w).normalize();\n\n            //Combine rotations to a single quaternion\n            quaternion_0 = this.multiplyQuaternions(quaternion_0, quaternion_1);\n\n            //Rotate around Z\n            angle = Math.random() * (max - min) + min;\n            RotationAxis = new THREE.Vector3(0, 0, 1);\n            x = RotationAxis.x * Math.sin(angle / 2.0);\n            y = RotationAxis.y * Math.sin(angle / 2.0);\n            z = RotationAxis.z * Math.sin(angle / 2.0);\n            w = Math.cos(angle / 2.0);\n            quaternion_1.set(x, y, z, w).normalize();\n\n            //Combine rotations to a single quaternion\n            quaternion_0 = this.multiplyQuaternions(quaternion_0, quaternion_1);\n\n            orientations.push(\n                quaternion_0.x,\n                quaternion_0.y,\n                quaternion_0.z,\n                quaternion_0.w\n            );\n\n            //Define variety in height\n            if (i < this.instances / 3) {\n                stretches.push(Math.random() * 1.8);\n            } else {\n                stretches.push(Math.random());\n            }\n        }\n\n        var offsetAttribute = new THREE.InstancedBufferAttribute(\n            new Float32Array(offsets),\n            3\n        );\n        var stretchAttribute = new THREE.InstancedBufferAttribute(\n            new Float32Array(stretches),\n            1\n        );\n        var halfRootAngleSinAttribute = new THREE.InstancedBufferAttribute(\n            new Float32Array(halfRootAngleSin),\n            1\n        );\n        var halfRootAngleCosAttribute = new THREE.InstancedBufferAttribute(\n            new Float32Array(halfRootAngleCos),\n            1\n        );\n        var orientationAttribute = new THREE.InstancedBufferAttribute(\n            new Float32Array(orientations),\n            4\n        );\n\n        instanced_geometry.setAttribute(\"offset\", offsetAttribute);\n        instanced_geometry.setAttribute(\"orientation\", orientationAttribute);\n        instanced_geometry.setAttribute(\"stretch\", stretchAttribute);\n        instanced_geometry.setAttribute(\n            \"halfRootAngleSin\",\n            halfRootAngleSinAttribute\n        );\n        instanced_geometry.setAttribute(\n            \"halfRootAngleCos\",\n            halfRootAngleCosAttribute\n        );\n\n        //Get alpha map and blade texture\n        var loader = new THREE.TextureLoader();\n        loader.crossOrigin = \"\";\n        var texture = loader.load(\"/model/blade_diffuse.jpg\");\n        var alphaMap = loader.load(\"/model/blade_alpha.jpg\");\n\n        //Define the material, specifying attributes, uniforms, shaders etc.\n        var material = new THREE.RawShaderMaterial({\n            uniforms: {\n                map: { value: texture },\n                alphaMap: { value: alphaMap },\n                // @ts-ignore\n                time: { type: \"float\", value: 0 }\n            },\n            vertexShader: this.vertexSource,\n            fragmentShader: this.fragmentSource,\n            side: THREE.DoubleSide\n        });\n\n        const mesh = new THREE.Mesh(instanced_geometry, material);\n        this.house.scene.add(mesh);\n\n        //Show base geometry\n        this.house.scene.add(base_blade);\n\n        // //************** Animate **************\n        this.draw = time => {\n            material.uniforms.time.value = time;\n        };\n    };\n}\n","import SceneConstructor from \"modules/house/c/SceneConstructor\";\nimport LightConstructor from \"modules/house/c/LightConstructor\";\nimport InteractiveElements from \"modules/house/c/InteractiveElements\";\nimport * as THREE from \"three\";\nimport SkyConstructor from \"modules/house/c/SkyConstructor\";\nimport GrassConstructor from \"modules/house/c/GrassConstructor\";\nimport App from \"App\";\n\nclass HouseView {\n    frame: HTMLDivElement;\n    cameraMoveFn: ((e: MouseEvent) => void) | null = null;\n\n    house: SceneConstructor | null = null;\n    lightHelper: LightConstructor | null = null;\n    interactiveHelper: InteractiveElements | null = null;\n    grass: GrassConstructor | null = null;\n\n    constructor(frame: HTMLDivElement) {\n        this.frame = frame;\n\n        this.init();\n    }\n\n    init = () => {\n        const frame = this.frame;\n        if (frame === null) return null;\n        this.house = new SceneConstructor(frame);\n        this.lightHelper = new LightConstructor();\n        this.interactiveHelper = new InteractiveElements(\n            frame,\n            this.house.camera\n        );\n\n        // LIGHTS ----------------------------------------\n        this.house.scene.add(new THREE.AmbientLight(0x9e9b91, 0.5));\n\n        this.lightHelper.createDirectionalLight(this.house.scene, {\n            color: 0xdfebff,\n            opacity: 0.3,\n            position: [25, 100, 50],\n            resolution: 256\n        });\n\n        this.lightHelper.createDirectionalLight(this.house.scene, {\n            color: 0xfffedf,\n            opacity: 0.5,\n            position: [0, 10, 50],\n            resolution: 256\n        });\n        // LIGHTS ----------------------------------------\n\n        // SKY ----------------------------------------\n        const skyController = {\n            turbidity: 10,\n            rayleigh: 3,\n            mieCoefficient: 0.005,\n            mieDirectionalG: 0.7,\n            elevation: 2,\n            azimuth: 0,\n            exposure: this.house.renderer.toneMappingExposure\n        };\n\n        const skyConstructor = new SkyConstructor(\n            this.house.renderer,\n            skyController\n        );\n        const sky = skyConstructor.sky;\n        this.house.scene.add(sky);\n        // SKY ----------------------------------------\n\n        //CAM MOVE ----------------------------------------\n        this.cameraMoveFn = this.house.getCameraMove();\n        window.addEventListener(\"mousemove\", this.cameraMoveFn);\n        //CAM MOVE ----------------------------------------\n\n        // WINDOWS ----------------------------------------\n        App.gallery.getItems().then(data => {\n            const windows: {\n                coords: [number, number, number];\n                dimensions: [number, number, number];\n                link: string;\n            }[] = data\n                .filter(page => page.COORDS && page.DIMENSIONS)\n                .map(page => ({\n                    coords: page.COORDS,\n                    dimensions: page.DIMENSIONS,\n                    link: \"/gallery/\" + page.CODE\n                }));\n\n            windows.forEach(w => {\n                const el = this.interactiveHelper?.createClickableMesh(\n                    w.coords,\n                    w.dimensions,\n                    (mesh, light) => {\n                        if (light) light.visible = true;\n                        window.location.href = w.link;\n                    },\n                    (mesh, light) => {\n                        frame.classList.add(\"hover\");\n                        if (light) light.visible = true;\n                    },\n                    (mesh, light) => {\n                        frame.classList.remove(\"hover\");\n                        if (light) light.visible = false;\n                    }\n                );\n\n                if (el) {\n                    this.house?.scene.add(el.light);\n                    this.house?.scene.add(el.mesh);\n                }\n            });\n\n            if (this.interactiveHelper) {\n                frame.addEventListener(\n                    \"mousedown\",\n                    this.interactiveHelper.onMouseClick,\n                    false\n                );\n                frame.addEventListener(\n                    \"mousemove\",\n                    this.interactiveHelper.onMouseMove,\n                    false\n                );\n            }\n        });\n        // WINDOWS ----------------------------------------\n\n        //GRASS ----------------------------------------\n        this.grass = new GrassConstructor(this.house);\n        this.grass.init();\n        //GRASS ----------------------------------------\n    };\n\n    destroy = () => {\n        if (this.cameraMoveFn)\n            window.removeEventListener(\"mousemove\", this.cameraMoveFn);\n\n        if (this.interactiveHelper) {\n            this.frame.removeEventListener(\n                \"mousedown\",\n                this.interactiveHelper.onMouseClick\n            );\n            this.frame.removeEventListener(\n                \"mousemove\",\n                this.interactiveHelper.onMouseMove\n            );\n        }\n\n        if (this.house) this.house.destroy();\n    };\n}\n\nexport default HouseView;\n","import React, { Component, RefObject } from \"react\";\nimport \"assets/scss/blocks/HouseFrame.scss\";\nimport HouseView from \"modules/house/c/HouseView\";\n\nclass HouseFrame extends Component<any> {\n    frame: RefObject<HTMLDivElement>;\n    view: HouseView | null = null;\n\n    constructor(props: any) {\n        super(props);\n\n        this.frame = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.frame.current) this.view = new HouseView(this.frame.current);\n    }\n\n    componentWillUnmount() {\n        this.view?.destroy();\n    }\n\n    render() {\n        return <div className=\"house-frame loading\" ref={this.frame} />;\n    }\n}\n\nexport default React.memo(HouseFrame);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport GalleryList from \"modules/gallery/GalleryList\";\nimport HouseFrame from \"modules/house/HouseFrame\";\n\nclass IndexPage extends Component<any> {\n    render() {\n        return (\n            <>\n                <HouseFrame />\n                <div className=\"container\">\n                    <GalleryList />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withRouter(IndexPage);\n","import React, { Component } from \"react\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport \"assets/scss/blocks/Tabs.scss\";\nimport { observer } from \"mobx-react\";\nimport App from \"App\";\nimport { MaterialItemType } from \"stores/Materials\";\n\ntype PathParamsType = {\n    id: string;\n};\n\ntype Props = RouteComponentProps<PathParamsType> & {};\n\nclass MaterialsPage extends Component<Props> {\n    tabs: MaterialItemType[] = [];\n    activeTab = \"\";\n\n    setTab = action((id: string) => {\n        this.activeTab = id;\n    });\n\n    constructor(props: Props) {\n        super(props);\n\n        App.events.emit(\"setPageTitle\", \"Материалы\");\n\n        makeObservable(this, {\n            tabs: observable,\n            activeTab: observable,\n            setTab: action\n        });\n\n        App.materials.getItems().then(data => {\n            runInAction(() => {\n                this.tabs = data;\n            });\n        });\n\n        this.activeTab = this.props.match.params?.id || this.tabs[0].CODE;\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        this.setTab(this.props.match.params?.id);\n    }\n\n    render() {\n        if (!this.tabs) return null;\n        return (\n            <div className=\"tabs\">\n                <ul className=\"tabs__buttons\">\n                    {this.tabs.map(tab => (\n                        <li\n                            key={tab.CODE}\n                            className={\n                                this.activeTab === tab.CODE ? \"active\" : \"\"\n                            }\n                            onClick={() => this.setTab(tab.CODE)}\n                        >\n                            <Link to={\"/materials/\" + tab.CODE}>\n                                {tab.NAME}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n                {this.tabs.map(tab => (\n                    <div\n                        key={tab.CODE}\n                        className={\n                            this.activeTab === tab.CODE\n                                ? \"tabs__content active\"\n                                : \"tabs__content\"\n                        }\n                    >\n                        <div\n                            dangerouslySetInnerHTML={{\n                                __html: tab.DETAIL_TEXT\n                            }}\n                        ></div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(observer(MaterialsPage));\n","import React, { Component } from \"react\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport Icon from \"modules/generic/Icon\";\n\ntype GalleryProps = {\n    images: string[];\n    img: number;\n    closeFn: Function;\n};\n\nclass GalleryPopup extends Component<GalleryProps> {\n    img = 0;\n    next = action(() => {\n        const next = this.img + 1;\n        const { images } = this.props;\n\n        if (!images[next]) {\n            this.img = 0;\n            return;\n        }\n\n        this.img = next;\n    });\n    prev = action(() => {\n        const next = this.img - 1;\n        const { images } = this.props;\n\n        if (!images[next]) {\n            this.img = images.length - 1;\n            return;\n        }\n\n        this.img = next;\n    });\n\n    constructor(props: GalleryProps) {\n        super(props);\n        const { images, img } = this.props;\n\n        this.img = images[img] ? img : 0;\n\n        makeObservable(this, {\n            img: observable\n        });\n    }\n\n    render() {\n        const { images, closeFn } = this.props;\n\n        return (\n            <div className=\"popup popup-pictures\">\n                <div className=\"popup__blend\" onClick={() => closeFn()} />\n                <div className=\"popup__content\">\n                    <div className=\"popup__arrows\">\n                        <div className=\"popup-arrow prev\" onClick={this.prev} />\n                        <div className=\"popup-arrow next\" onClick={this.next} />\n                    </div>\n                    <Icon src={images[this.img]} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default observer(GalleryPopup);\n","import React, { Component } from \"react\";\nimport \"assets/scss/blocks/GalleryPictures.scss\";\nimport { observer } from \"mobx-react\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport GalleryPopup from \"modules/gallery/c/GalleryPopup\";\nimport Icon from \"modules/generic/Icon\";\n\nclass GalleryPictures extends Component<{ pictures: string[] }> {\n    pictures = this.props.pictures;\n    allPictures = [...this.props.pictures];\n    showPictures = this.pictures.splice(0, 10);\n    showGallery: number | null = null;\n\n    showMore = () => {\n        if (this.pictures.length) {\n            this.showPictures = [\n                ...this.showPictures,\n                ...this.pictures.splice(0, 10)\n            ];\n        }\n    };\n\n    setGallery = action((img: number | null = null) => {\n        this.showGallery = img;\n    });\n\n    constructor(props: { pictures: string[] }) {\n        super(props);\n\n        makeObservable(this, {\n            showPictures: observable,\n            showMore: action,\n            showGallery: observable\n        });\n    }\n\n    render() {\n        const { showPictures, showMore, setGallery } = this;\n\n        return (\n            <>\n                <div className=\"gallery-pictures\">\n                    {showPictures.map((img, key) => (\n                        <div\n                            className=\"gallery-picture\"\n                            key={\"gallery-picture__\" + key}\n                            onClick={() => setGallery(key)}\n                        >\n                            <div className=\"gallery-picture__img\">\n                                <Icon src={img} />\n                            </div>\n                        </div>\n                    ))}\n                    {this.pictures.length > 0 ? (\n                        <div className=\"gallery-pictures__more\">\n                            <button className=\"button\" onClick={showMore}>\n                                Показать еще\n                            </button>\n                        </div>\n                    ) : null}\n                </div>\n                {this.showGallery !== null ? (\n                    <GalleryPopup\n                        images={this.allPictures}\n                        img={this.showGallery}\n                        closeFn={this.setGallery}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default observer(GalleryPictures);\n","import React, { Component } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { makeObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport GalleryPictures from \"modules/gallery/GalleryPictures\";\nimport App from \"App\";\nimport { GalleryContentType } from \"stores/Gallery\";\n\ntype PathParamsType = {\n    id: string;\n};\n\ntype Props = RouteComponentProps<PathParamsType> & {};\n\nclass GalleryPage extends Component<Props> {\n    item?: GalleryContentType = undefined;\n\n    constructor(props: Props) {\n        super(props);\n\n        makeObservable(this, {\n            item: observable\n        });\n\n        App.gallery.getContent(this.props.match.params.id).then(data => {\n            if (data) {\n                runInAction(() => {\n                    this.item = data;\n                });\n                App.events.emit(\"setPageTitle\", data.NAME);\n            }\n        });\n    }\n\n    render() {\n        if (!this.item) return null;\n        return (\n            <>\n                <div\n                    dangerouslySetInnerHTML={{ __html: this.item.PREVIEW_TEXT }}\n                ></div>\n                <GalleryPictures pictures={this.item.PICTURES} />\n            </>\n        );\n    }\n}\n\nexport default withRouter(observer(GalleryPage));\n","import React, { Component } from \"react\";\n\nclass AccessoriesPage extends Component<any> {\n    text = \"Раздел находится в разработке...\";\n\n    render() {\n        return (\n            <div>\n                {this.text.split(\"\\n\").map((str, key) => (\n                    <p key={key}>{str}</p>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default AccessoriesPage;\n","import React, { Component } from \"react\";\n\nclass TermsOfActionPage extends Component<any> {\n    text = (\n        <>\n            <h2>Преимущества изготовления мебели на заказ</h2>\n\n            <ol>\n                <li>\n                    Исключительность и неповторимость дизайна мебели, который\n                    подчеркнёт Вашу индивидуальность.\n                </li>\n                <li>\n                    Максимальное использование помещения любой площади и\n                    сложности, с учётом всех особенностей планировки.\n                </li>\n                <li>\n                    Изготовление мебели любых форм, цветов и размеров, которая\n                    оптимально впишется в Ваш интерьер.\n                </li>\n                <li>\n                    Возможность стать автором своей мебели. Мы воплотим в жизнь\n                    проект, изображенный на вашем эскизе, либо Вы сможете\n                    совместно с профессиональным дизайнером проработать дизайн,\n                    в котором будут учтены абсолютно все Ваши предпочтения.\n                </li>\n            </ol>\n\n            <h2>Как мы работаем:</h2>\n\n            <p>\n                Обращаясь в нашу компанию, Вы получаете бесплатную консультацию\n                специалиста, выезд мастера на адрес для замера помещения. Затем\n                следует создание индивидуального проекта для Вашего помещения с\n                учётом всех пожеланий и возможностей. Производятся расчёты\n                проекта ( в дальнейшем возможна корректировка). При обоюдном\n                согласии заключается договор с предоплатой в размере 50%,\n                остаток суммы вносится после установки мебели, также\n                предоставляется рассрочка. Далее заказ отправляется на\n                производство. Срок изготовления в среднем составляет от 15 до 35\n                рабочих дней, но может варьироваться в зависимости от сложности\n                проекта. После установки мебели Вам предоставляется акт\n                выполненных работ. Гарантия на нашу продукцию составляет 12\n                месяцев.\n            </p>\n\n            <h2>Существует система скидок:</h2>\n\n            <ul>\n                <li>в зависимости от объёма заказа</li>\n                <li>в зависимости от общей стоимости заказа</li>\n                <li>при повторном заказе</li>\n            </ul>\n        </>\n    );\n\n    render() {\n        return this.text;\n    }\n}\n\nexport default TermsOfActionPage;\n","import App from \"App\";\nimport React, { Component } from \"react\";\nimport \"assets/scss/blocks/ContactsPage.scss\";\nimport { YMaps, Map, Panorama, Placemark, GeoObject } from \"react-yandex-maps\";\n\nclass ContactsPage extends Component<any> {\n    render() {\n        const { email, fullAddress, phone } = App.company;\n        return (\n            <div className=\"contacts-page\">\n                <div className=\"contacts-page__contacts\">\n                    <div className=\"contacts-page__contact\">\n                        <div className=\"h2\">Адрес:</div>\n                        <p>{fullAddress}</p>\n                    </div>\n                    <div className=\"contacts-page__contact\">\n                        <div className=\"h2\">Тел.:</div>\n                        <p>\n                            <a href={\"tel:\" + phone}>{phone}</a>\n                        </p>\n                    </div>\n                    <div className=\"contacts-page__contact\">\n                        <div className=\"h2\">E-mail:</div>\n                        <p>\n                            <a href={\"mailto:\" + email}>{email}</a>\n                        </p>\n                    </div>\n                </div>\n\n                <YMaps\n                    query={{\n                        apikey: \"20aadff4-aa14-44a4-b2d8-70edd5f9d465\",\n                        lang: \"ru_RU\"\n                    }}\n                >\n                    <div className=\"contacts-page__map\">\n                        <Map\n                            style={{ width: \"auto\", height: \"auto\" }}\n                            defaultState={{\n                                center: [53.097437, 49.96675],\n                                zoom: 17\n                            }}\n                        >\n                            <GeoObject\n                                geometry={{\n                                    type: \"LineString\",\n                                    coordinates: [\n                                        [53.097759, 49.966814],\n                                        [53.097505, 49.967451],\n                                        [53.09724, 49.967114],\n                                        [53.09726, 49.967053]\n                                    ]\n                                }}\n                                options={{\n                                    geodesic: true,\n                                    strokeWidth: 5,\n                                    strokeColor: \"#F008\"\n                                }}\n                            />\n                            <Placemark\n                                geometry={[53.097339, 49.966872]}\n                                options={{\n                                    hasBalloon: true,\n                                    openBalloonOnClick: true\n                                }}\n                                properties={{\n                                    balloonContent: `Идея мебели — просп. Победы, 22А, Новокуйбышевск, Россия`\n                                }}\n                                modules={[\n                                    \"geoObject.addon.balloon\",\n                                    \"geoObject.addon.hint\"\n                                ]}\n                            />\n                        </Map>\n                    </div>\n                    <div className=\"contacts-page__pano\">\n                        <Panorama\n                            defaultPoint={[53.097548, 49.967382]}\n                            style={{ width: \"auto\", height: \"auto\" }}\n                            options={{ direction: [220, 0] }}\n                        />\n                    </div>\n                </YMaps>\n            </div>\n        );\n    }\n}\n\nexport default ContactsPage;\n","import React, { Component } from \"react\";\n\nclass SitemapPage extends Component<any> {\n    text = \"Раздел находится в разработке...\";\n\n    render() {\n        return (\n            <div>\n                {this.text.split(\"\\n\").map((str, key) => (\n                    <p key={key}>{str}</p>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default SitemapPage;\n","import React, { Component } from \"react\";\nimport App from \"App\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { GalleryItemType } from \"stores/Gallery\";\nimport { MaterialItemType } from \"stores/Materials\";\n\ntype Props = {\n    match: { path: string; params: { id: string } };\n};\n\nclass DynamicBreadcrumb extends Component<Props> {\n    breadcrumb: string = \"\";\n\n    constructor(props: Props) {\n        super(props);\n\n        makeObservable(this, {\n            breadcrumb: observable\n        });\n\n        const pathList = this.props.match.path.split(\"/\");\n        const idx = pathList.findIndex(param => param === \":id\");\n        const type = pathList[idx - 1];\n\n        if (type === \"gallery\")\n            App.gallery.getItems().then(this.fillBreadcrumb);\n\n        if (type === \"materials\")\n            App.materials.getItems().then(this.fillBreadcrumb);\n    }\n\n    fillBreadcrumb = action(\n        (data: Array<GalleryItemType | MaterialItemType>) => {\n            const item = data.find(\n                item => item.CODE === this.props.match.params.id\n            );\n            this.breadcrumb = item?.NAME || \"\";\n        }\n    );\n\n    render() {\n        return <span>{this.breadcrumb}</span>;\n    }\n}\n\nexport default observer(DynamicBreadcrumb);\n","const routesConf = [\n    {\n        id: \"main\",\n        name: \"Главная\",\n        path: \"/\",\n        exact: true,\n        component: \"IndexPage\"\n    },\n    {\n        id: \"about\",\n        name: \"О компании\",\n        path: \"/about\",\n        component: \"AboutPage\"\n    },\n    {\n        id: \"gallery\",\n        name: \"Галерея\",\n        path: \"/gallery\",\n        exact: true,\n        component: \"GalleryList\"\n    },\n    {\n        id: \"gallery-item\",\n        name: \"Галерея\",\n        path: \"/gallery/:id\",\n        parentId: \"gallery\",\n        component: \"GalleryPage\"\n    },\n    {\n        id: \"materials\",\n        name: \"Материалы\",\n        path: \"/materials\",\n        exact: true,\n        component: \"MaterialsPage\"\n    },\n    {\n        id: \"material\",\n        name: \"Материал\",\n        path: \"/materials/:id\",\n        component: \"MaterialsPage\"\n    },\n    {\n        id: \"accessories\",\n        name: \"Комплектующие\",\n        path: \"/accessories\",\n        component: \"AccessoriesPage\"\n    },\n    {\n        id: \"terms-of-action\",\n        name: \"Условия, акции\",\n        path: \"/terms-of-action\",\n        component: \"TermsOfActionPage\"\n    },\n    {\n        id: \"contacts\",\n        name: \"Контакты\",\n        path: \"/contacts\",\n        component: \"ContactsPage\"\n    },\n    {\n        id: \"sitemap\",\n        name: \"Карта сайта\",\n        path: \"/sitemap\",\n        component: \"SitemapPage\"\n    }\n];\n\nexport default routesConf;\n","import AboutPage from \"pages/AboutPage\";\nimport IndexPage from \"pages/IndexPage\";\nimport MaterialsPage from \"pages/MaterialsPage\";\nimport GalleryList from \"modules/gallery/GalleryList\";\nimport GalleryPage from \"pages/GalleryPage\";\nimport AccessoriesPage from \"pages/AccessoriesPage\";\nimport TermsOfActionPage from \"pages/TermsOfActionPage\";\nimport ContactsPage from \"pages/ContactsPage\";\nimport SitemapPage from \"pages/SitemapPage\";\nimport { ComponentType } from \"react\";\nimport DynamicBreadcrumb from \"utils/DynamicBreadcrumb\";\nimport routesConf from \"conf/routes\";\n\ninterface PageTypes {\n    [key: string]: ComponentType;\n}\n\nconst PageComponents: PageTypes = {\n    AboutPage,\n    IndexPage,\n    MaterialsPage,\n    GalleryList,\n    GalleryPage,\n    AccessoriesPage,\n    TermsOfActionPage,\n    ContactsPage,\n    SitemapPage\n};\n\nexport type Page = {\n    id: string;\n    name: string;\n    path: string;\n    exact?: boolean;\n    component?: any;\n    parentId?: string;\n};\n\nclass Pages {\n    list: Page[] = routesConf.map(r => ({\n        ...r,\n        component: PageComponents[r.component] || null\n    }));\n\n    get routes() {\n        return this.list;\n    }\n\n    get main() {\n        return this.list[0];\n    }\n\n    get header() {\n        return this.list.filter(\n            item =>\n                [\"main\", \"sitemap\", \"gallery-item\", \"material\"].indexOf(\n                    item.id\n                ) === -1\n        );\n    }\n\n    get footer() {\n        return this.list.filter(\n            item => [\"main\", \"gallery-item\", \"material\"].indexOf(item.id) === -1\n        );\n    }\n\n    getById(id: string) {\n        const idx = this.list.findIndex(page => page.id === id);\n        if (idx === -1) return null;\n        return this.list[idx];\n    }\n\n    static get routesMap() {\n        return routesConf.map(item => {\n            if (item.path.indexOf(\":id\") > -1)\n                return { path: item.path, breadcrumb: DynamicBreadcrumb };\n            return { path: item.path, breadcrumb: item.name };\n        });\n    }\n}\n\nexport default Pages;\n","import React from \"react\";\nimport \"assets/scss/blocks/Breadcrumbs.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\nimport Pages from \"stores/Pages\";\n\nconst Breadcrumbs = ({ breadcrumbs }: any) => {\n    return (\n        <div className=\"container\">\n            <div className=\"breadcrumbs\">\n                <ul>\n                    {breadcrumbs.map(\n                        ({\n                            match,\n                            breadcrumb\n                        }: {\n                            match: { url: string };\n                            breadcrumb: React.ComponentType | string;\n                        }) => (\n                            <li key={match.url}>\n                                <NavLink\n                                    to={match.url}\n                                    className={\n                                        match.url !== \"/\"\n                                            ? \"icn_arrow_gray icn_6\"\n                                            : \"\"\n                                    }\n                                >\n                                    {breadcrumb}\n                                </NavLink>\n                            </li>\n                        )\n                    )}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default withBreadcrumbs(Pages.routesMap)(Breadcrumbs);\n","import React, { Component } from \"react\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport classNames from \"classnames\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport App from \"App\";\nimport { observer } from \"mobx-react\";\n\ntype Props = {\n    cls?: string;\n    name?: string;\n    children?: React.ReactNode;\n};\n\nclass PageContainer extends Component<Props> {\n    pageName: string = this.props.name || \"\";\n\n    constructor(props: Props) {\n        super(props);\n        makeObservable(this, {\n            pageName: observable\n        });\n    }\n\n    setPageName = action((name: string) => {\n        this.pageName = name;\n    });\n\n    componentDidMount() {\n        App.events.on(\"setPageTitle\", this.setPageName);\n    }\n\n    componentWillUnmount() {\n        App.events.off(\"setPageTitle\", this.setPageName);\n    }\n\n    render() {\n        const { children, cls = \"\" } = this.props;\n\n        return (\n            <>\n                <Breadcrumbs />\n                <div className={classNames(\"container page-content\", cls)}>\n                    <h1>{this.pageName}</h1>\n                    {children}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default observer(PageContainer);\n","// @flow\nimport \"whatwg-fetch\";\n\nimport { noop, makeRequest } from \"./misc\";\n\nexport default class API {\n    static callInProgress: Promise<any> | null = null;\n    static queue: Function[] = [];\n    static batch: { method: string; args: Object | null }[] = [];\n\n    static addToBatch(method: string, args: Object | null = null) {\n        if (API.batch.length < 20) {\n            API.batch.push({ method, args });\n            return Promise.resolve();\n        }\n        return API.callMethod(method, args);\n    }\n\n    static getURL(\n        extra: { profile?: string; download?: string } | null = null\n    ) {\n        let url = \"/api/\";\n        if (extra?.profile) {\n            url += \"?prof\";\n            if (extra?.download) {\n                url += \"&download\";\n            }\n        }\n        return url;\n    }\n\n    static callMethod(\n        method: string,\n        args: Object | null = null,\n        extra: Object | null = null\n    ) {\n        const request = API.makeRequest(method, args, extra);\n\n        // Deferred-based queue\n        let _resolve = noop,\n            _reject = noop;\n        const promise = new Promise<any>((resolve, reject) => {\n            _resolve = resolve;\n            _reject = reject;\n            return null;\n        });\n\n        function doCallAPI() {\n            return fetch(request)\n                .then(\n                    response => {\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            console.log(\"api err\", {\n                                error: \"Network Error\",\n                                response\n                            });\n                            // App.events.emit(\"API_Error\", {\n                            //     error: \"Network Error\",\n                            //     response\n                            // });\n                            _reject(\n                                new Error(\n                                    `${response.status} ${response.statusText}`\n                                )\n                            );\n                            API.continueCalls();\n                        }\n                    },\n                    error => {\n                        _reject(error);\n                        API.continueCalls();\n                    }\n                )\n                .then(data => {\n                    if (data) {\n                        if (data.result === \"ok\") {\n                            _resolve(data.response);\n                        } else if (data.result === \"ban\") {\n                            // App.events.emit(\"API_Banned\", data.data);\n                        } else {\n                            if (data.error instanceof Array) {\n                                console.log(\"API_Error\", {\n                                    error: data.error[0]\n                                });\n                                // App.events.emit(\"API_Error\", {\n                                //     error: data.error[0]\n                                // });\n                                _reject(new Error(data.error[0]));\n                            } else {\n                                console.log(\"API_Error\", {\n                                    error: data\n                                });\n                                // App.events.emit(\"API_Error\", data);\n                                _reject(new Error(data.error));\n                            }\n                        }\n                        API.continueCalls();\n                        return null;\n                    }\n                });\n        }\n\n        if (API.callInProgress) {\n            API.queue.push(doCallAPI);\n        } else {\n            API.callInProgress = doCallAPI();\n        }\n        return promise;\n    }\n\n    static continueCalls() {\n        if (API.queue.length) {\n            const nextCall = API.queue.shift();\n            API.callInProgress = nextCall?.();\n        } else API.callInProgress = null;\n    }\n\n    static makeRequest(\n        method: string,\n        args?: Object | null,\n        extra: Object | null = null\n    ) {\n        args = args || {};\n        const data: {\n            method: string;\n            args?: Object | null;\n            batch?: { method: string; args: Object | null }[];\n        } = { method, args };\n        if (API.batch.length) {\n            data.batch = API.batch;\n            API.batch = [];\n        }\n\n        const url = API.getURL(extra);\n        return makeRequest(url, \"POST\", null, { data: JSON.stringify(data) });\n    }\n}\n","import API from \"utils/API\";\n\nexport type GalleryItemType = {\n    ID: string;\n    NAME: string;\n    CODE: string;\n    PREVIEW_PICTURE: string;\n    COORDS: [number, number, number];\n    DIMENSIONS: [number, number, number];\n};\n\nexport type GalleryContentType = {\n    ID: string;\n    NAME: string;\n    CODE: string;\n    PREVIEW_PICTURE: string;\n    PREVIEW_TEXT: string;\n    PICTURES: string[];\n};\n\nclass Gallery {\n    items: GalleryItemType[] = [];\n    contents: { [id: string]: GalleryContentType } = {};\n\n    async getItems(): Promise<GalleryItemType[]> {\n        if (this.items.length) return this.items;\n        return API.callMethod(\"gallery.list\").then(data => {\n            this.items = data;\n            return data;\n        });\n    }\n\n    async getContent(id: string): Promise<GalleryContentType> {\n        if (this.contents[id]) return this.contents[id];\n        return API.callMethod(\"gallery.item\", { id }).then(data => {\n            this.contents[id] = data;\n            return data;\n        });\n    }\n}\n\nexport default Gallery;\n","import API from \"utils/API\";\n\nexport type MaterialItemType = {\n    ID: string;\n    NAME: string;\n    CODE: string;\n    DETAIL_TEXT: string;\n};\n\nclass Materials {\n    items: MaterialItemType[] = [];\n\n    async getItems(): Promise<MaterialItemType[]> {\n        if (this.items.length) return this.items;\n        return API.callMethod(\"materials.list\").then(data => {\n            this.items = data;\n            return data;\n        });\n    }\n}\n\nexport default Materials;\n","import React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport Header from \"modules/blocks/Header\";\nimport Footer from \"modules/blocks/Footer\";\nimport \"./assets/scss/main.scss\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport Pages, { Page } from \"stores/Pages\";\nimport { createBrowserHistory } from \"history\";\nimport Company from \"stores/Company\";\nimport PageContainer from \"modules/generic/PageContainer\";\nimport EventEmitter from \"events\";\nimport Gallery from \"stores/Gallery\";\nimport Materials from \"stores/Materials\";\n\ntype Props = {};\n\nconst history = createBrowserHistory();\nconst events: EventEmitter = new EventEmitter();\n\nclass App extends Component<Props> {\n    sideOpened: boolean = false;\n\n    toggleSide = () => {\n        this.sideOpened = !this.sideOpened;\n    };\n\n    static pages = new Pages();\n    static company = new Company();\n    static gallery = new Gallery();\n    static materials = new Materials();\n\n    static getApp() {\n        return App;\n    }\n\n    static get history() {\n        return history;\n    }\n\n    static get events() {\n        return events;\n    }\n\n    constructor(props: Props) {\n        super(props);\n        makeObservable(this, {\n            sideOpened: observable,\n            toggleSide: action\n        });\n    }\n\n    renderPage(route: Page) {\n        let PageComponent = route.component;\n        let page;\n\n        switch (route.id) {\n            case \"main\":\n                page = PageComponent ? <PageComponent /> : null;\n                break;\n            case \"materials\":\n                //get from api\n                page = <Redirect to=\"/materials/ldsp\" />;\n                break;\n            default:\n                page = (\n                    <PageContainer name={route.name}>\n                        {PageComponent ? <PageComponent /> : null}\n                    </PageContainer>\n                );\n                break;\n        }\n        return page;\n    }\n\n    render() {\n        return (\n            <Router>\n                <div\n                    className={classnames(\"App\", {\n                        \"side-open\": this.sideOpened\n                    })}\n                >\n                    <Header toggleSideFn={this.toggleSide} />\n                    <main className=\"content\">\n                        <Switch>\n                            {App.pages.routes.map(route => (\n                                <Route\n                                    key={route.path}\n                                    exact={route.exact}\n                                    path={route.path}\n                                >\n                                    {this.renderPage(route)}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </main>\n                    <Footer />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default observer(App);\n\ndeclare global {\n    interface Window {\n        getApp: any;\n    }\n}\n\nwindow.getApp = App.getApp || {};\n","import React from \"react\";\n\nexport default class Company {\n    email = \"idea2002@mail.ru\";\n    address = \"пр.Победы 22А, офис 5\";\n    fullAddress = \"г.Новокуйбышевск, пр.Победы 22А, офис 5\";\n    phone = \"+7 (917) 011-01-99\";\n    aboutText = (\n        <>\n            <p>\n                Наша компания на рынке мебели существует уже много лет. Мы\n                специализируемся на производстве корпусной мебели по\n                индивидуальным дизайн - проектам: кухонные гарнитуры,\n                шкафы-купе, гардеробные, спальни, гостиные, детские и\n                подростковые комнаты, прихожие, офисная мебель, и мебель для\n                различных специализированных учреждений (детские сады, заправки,\n                кафе, больницы и пр.). Отличие от других производителей это\n                оптимальное соотношение цены и качества, широкий ассортимент\n                материалов и фурнитуры, гарантия на продукцию, выполненную на\n                импортном оборудовании европейских производителей, и\n                высококвалифицированными специалистами.\n            </p>\n            <p>\n                Приоритетом нашей компании является использование передовых\n                технологий, освоение новых современных материалов, что позволяет\n                создавать эксклюзивную продукцию и воплощать в жизнь самые\n                смелые дизайнерские решения.\n            </p>\n        </>\n    );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}